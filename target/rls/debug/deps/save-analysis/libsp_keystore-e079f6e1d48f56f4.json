{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0","program":"/home/iamkhalifaMBA/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","sp_keystore","--edition=2018","/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"serde\"","--cfg","feature=\"std\"","-C","metadata=e079f6e1d48f56f4","-C","extra-filename=-e079f6e1d48f56f4","--out-dir","/home/iamkhalifaMBA/Documents/GitHub/fetch-price/target/rls/debug/deps","-L","dependency=/home/iamkhalifaMBA/Documents/GitHub/fetch-price/target/rls/debug/deps","--extern","async_trait=/home/iamkhalifaMBA/Documents/GitHub/fetch-price/target/rls/debug/deps/libasync_trait-44064807dc0645fc.so","--extern","derive_more=/home/iamkhalifaMBA/Documents/GitHub/fetch-price/target/rls/debug/deps/libderive_more-785c3d709671c311.so","--extern","futures=/home/iamkhalifaMBA/Documents/GitHub/fetch-price/target/rls/debug/deps/libfutures-3970f08da3fde424.rmeta","--extern","merlin=/home/iamkhalifaMBA/Documents/GitHub/fetch-price/target/rls/debug/deps/libmerlin-e383593296648b82.rmeta","--extern","codec=/home/iamkhalifaMBA/Documents/GitHub/fetch-price/target/rls/debug/deps/libparity_scale_codec-b8ddaabbcd660ec5.rmeta","--extern","parking_lot=/home/iamkhalifaMBA/Documents/GitHub/fetch-price/target/rls/debug/deps/libparking_lot-90a0a6b464f14e22.rmeta","--extern","schnorrkel=/home/iamkhalifaMBA/Documents/GitHub/fetch-price/target/rls/debug/deps/libschnorrkel-1ddf669786d4bab8.rmeta","--extern","serde=/home/iamkhalifaMBA/Documents/GitHub/fetch-price/target/rls/debug/deps/libserde-127ad033c16489f2.rmeta","--extern","sp_core=/home/iamkhalifaMBA/Documents/GitHub/fetch-price/target/rls/debug/deps/libsp_core-97cba1f9e81f00d5.rmeta","--extern","sp_externalities=/home/iamkhalifaMBA/Documents/GitHub/fetch-price/target/rls/debug/deps/libsp_externalities-df899f24f60abb88.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/iamkhalifaMBA/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/iamkhalifaMBA/Documents/GitHub/fetch-price/target/rls/debug/deps/libsp_keystore-e079f6e1d48f56f4.rmeta"},"prelude":{"crate_id":{"name":"sp_keystore","disambiguator":[5767572510778774891,16299369385252465238]},"crate_root":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src","external_crates":[{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3329901521826220148,8779651902869174066]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":2,"id":{"name":"core","disambiguator":[11533795067257537051,6600409280955634707]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12614123221401343543,9564301585503608515]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[1785005413158388284,2453622026203223019]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12957079427417428001,17718260667887668647]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10214993728156300765,14618204673916620187]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12453517098623888364,4709794086161820998]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12634510118091288440,7983944581587655387]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14017342134866723280,9256858969587329629]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[7061025862014072460,14171357653989770935]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2285728033677722481,16182084057206383065]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[7305883247437987566,266452839079745451]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[13956229687295891598,15294992126055156716]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[931598532372339641,10024719927090962737]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[11150552510595322945,15608256962932530162]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[4217706585212656622,592289864015908737]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[2229008352226773351,3496425060661471051]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":18,"id":{"name":"sp_core","disambiguator":[12552855154188328441,14279670543375143835]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":19,"id":{"name":"sp_runtime_interface","disambiguator":[13865466084140562946,18398780444493758958]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":20,"id":{"name":"sp_wasm_interface","disambiguator":[11767818514340394660,3674269002802711002]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":21,"id":{"name":"sp_std","disambiguator":[11289927811227362981,17451319125865105785]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/vrf.rs","num":22,"id":{"name":"parity_scale_codec","disambiguator":[3344586216812020924,18126907941249874209]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/vrf.rs","num":23,"id":{"name":"parity_scale_codec_derive","disambiguator":[5032100878089909991,8223780707774349048]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/vrf.rs","num":24,"id":{"name":"arrayvec","disambiguator":[487999005933757929,8785264546094756594]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/vrf.rs","num":25,"id":{"name":"byte_slice_cast","disambiguator":[17378233823559399028,16482987448079855741]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/vrf.rs","num":26,"id":{"name":"serde","disambiguator":[3226435324311995961,5917753166386681266]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/vrf.rs","num":27,"id":{"name":"serde_derive","disambiguator":[6533131939338989452,2943432850772658384]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":28,"id":{"name":"impl_trait_for_tuples","disambiguator":[13800182396709687713,7344091714495260784]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":29,"id":{"name":"wasmi","disambiguator":[13084475032152227264,12863380958471004072]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":30,"id":{"name":"memory_units","disambiguator":[14166869296551377682,6364907935072756041]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":31,"id":{"name":"parity_wasm","disambiguator":[2598256704702933825,15927053376037369794]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":32,"id":{"name":"wasmi_validation","disambiguator":[6753860476993415604,11440238505125571110]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":33,"id":{"name":"num_rational","disambiguator":[8289082640819324456,6938281779328583935]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":34,"id":{"name":"num_bigint","disambiguator":[17209060074421515469,13064110350075782614]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":35,"id":{"name":"num_integer","disambiguator":[15498394332039401095,4669831214240903744]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":36,"id":{"name":"num_traits","disambiguator":[18102483637265266435,5149433718230571651]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":37,"id":{"name":"libc","disambiguator":[4756085506995559181,8501383540937715581]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":38,"id":{"name":"sp_tracing","disambiguator":[13069615707285025531,18026141862976467802]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":39,"id":{"name":"tracing_core","disambiguator":[15594676089062494956,2094292116137129320]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":40,"id":{"name":"lazy_static","disambiguator":[2470383162066340162,6700700590454652848]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":41,"id":{"name":"tracing","disambiguator":[4214813368110196866,382097426264316406]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":42,"id":{"name":"cfg_if","disambiguator":[17405709527175409947,1096695995382631820]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":43,"id":{"name":"tracing_attributes","disambiguator":[12653888507222442672,4646895018210958107]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":44,"id":{"name":"pin_project_lite","disambiguator":[5451979413912480634,3315749171994529137]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":45,"id":{"name":"tracing_subscriber","disambiguator":[146660571276282721,8645764715541759678]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":46,"id":{"name":"regex","disambiguator":[17367353086046159637,15627584209393836802]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":47,"id":{"name":"aho_corasick","disambiguator":[10936562716485620074,11626342882713680874]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":48,"id":{"name":"memchr","disambiguator":[14065984754148341751,3050617661830808584]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":49,"id":{"name":"regex_syntax","disambiguator":[11448541676806122779,18070434042875609130]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":50,"id":{"name":"thread_local","disambiguator":[518115746887005807,4682884077898420682]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":51,"id":{"name":"once_cell","disambiguator":[10925765768508068584,8362021522946551033]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":52,"id":{"name":"parking_lot","disambiguator":[13101937957877607134,10643089104843057070]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":53,"id":{"name":"instant","disambiguator":[7410015893699801511,1088116847120777364]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":54,"id":{"name":"lock_api","disambiguator":[7182255340872129833,8865722548724162160]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":55,"id":{"name":"scopeguard","disambiguator":[13742932171067816904,15949076817111810874]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":56,"id":{"name":"parking_lot_core","disambiguator":[2084652751660147145,4369140542406314096]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":57,"id":{"name":"smallvec","disambiguator":[3118337058958053552,3990049805881230551]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":58,"id":{"name":"matchers","disambiguator":[1428024660142894079,16954660176045358438]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":59,"id":{"name":"regex_automata","disambiguator":[3415226216194899719,5250837260491743122]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":60,"id":{"name":"byteorder","disambiguator":[7777295475273346530,9444718331061320852]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":61,"id":{"name":"ansi_term","disambiguator":[4354796774629330818,16696402673818652226]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":62,"id":{"name":"tracing_log","disambiguator":[4261852212312970269,12132329417519794659]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":63,"id":{"name":"log","disambiguator":[8314329449366671128,7051549984132113537]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":64,"id":{"name":"serde_json","disambiguator":[14494945838799466317,12528780276029031005]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":65,"id":{"name":"itoa","disambiguator":[7898107543888308904,5595878792732511128]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":66,"id":{"name":"ryu","disambiguator":[11501038768394647447,8279322856311728769]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":67,"id":{"name":"tracing_serde","disambiguator":[15390108561047386821,13467060767483695078]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":68,"id":{"name":"sharded_slab","disambiguator":[4427252319210293232,11208805716511276417]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":69,"id":{"name":"chrono","disambiguator":[5071722597152996119,2154578861353130946]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":70,"id":{"name":"time","disambiguator":[8415863822759844247,13273041793239248141]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":71,"id":{"name":"sp_runtime_interface_proc_macro","disambiguator":[2472014129108654830,2710559286833006891]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","num":72,"id":{"name":"sp_externalities","disambiguator":[18138284999377657962,15456418918852912634]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":73,"id":{"name":"sp_storage","disambiguator":[12770639678419020770,10294003153879980960]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":74,"id":{"name":"sp_debug_derive","disambiguator":[6046632107122401901,18179886646975303374]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":75,"id":{"name":"ref_cast","disambiguator":[14496277549563319517,9897258381413632697]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":76,"id":{"name":"ref_cast_impl","disambiguator":[9653139990444592244,2122958543829635127]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":77,"id":{"name":"impl_serde","disambiguator":[10309156704262889840,15406272151509642073]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":78,"id":{"name":"environmental","disambiguator":[5468993481189335719,6504487852313505124]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":79,"id":{"name":"primitive_types","disambiguator":[2560295959061781323,4652240212493381522]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":80,"id":{"name":"fixed_hash","disambiguator":[13896632971928694523,15433244744937672872]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":81,"id":{"name":"static_assertions","disambiguator":[1936815850315553871,17847035570453106421]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":82,"id":{"name":"rustc_hex","disambiguator":[9877402155822363102,16446485623786175868]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":83,"id":{"name":"rand","disambiguator":[7554077509509168745,12306766310295958952]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":84,"id":{"name":"rand_core","disambiguator":[17236100727176127049,1412021430314910562]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":85,"id":{"name":"getrandom","disambiguator":[1200016386557168839,5157023259801664727]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":86,"id":{"name":"uint","disambiguator":[6413448012773241717,11600941888230282542]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":87,"id":{"name":"hex","disambiguator":[9623140459031286902,10302809824799805909]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":88,"id":{"name":"crunchy","disambiguator":[13484048999876025127,10607960052783090342]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":89,"id":{"name":"impl_codec","disambiguator":[7830512210558947367,5115456112535484589]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":90,"id":{"name":"blake2_rfc","disambiguator":[6285110028665876382,5896885256283698554]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":91,"id":{"name":"arrayvec","disambiguator":[15363406476144104867,3073478121070042924]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":92,"id":{"name":"nodrop","disambiguator":[6116135812924707116,10568374031815938316]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":93,"id":{"name":"constant_time_eq","disambiguator":[14007098898204094170,3623275077732787647]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":94,"id":{"name":"sha2","disambiguator":[8701174617775368570,13537991715328423208]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":95,"id":{"name":"block_buffer","disambiguator":[7690384485143716696,16362682151434163842]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":96,"id":{"name":"generic_array","disambiguator":[14477177905724147217,12640388506503970382]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":97,"id":{"name":"typenum","disambiguator":[14539751002094413998,13741638626162636888]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":98,"id":{"name":"digest","disambiguator":[13263462474885979933,8249727475919046649]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":99,"id":{"name":"opaque_debug","disambiguator":[18191018209166640028,5537041730909224768]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":100,"id":{"name":"cpuid_bool","disambiguator":[14605366882956910774,2183621384530642145]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":101,"id":{"name":"tiny_keccak","disambiguator":[18279356690361520551,8379309104423599597]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":102,"id":{"name":"twox_hash","disambiguator":[1181233819549131246,12780435879657109459]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":103,"id":{"name":"cfg_if","disambiguator":[9015421078749522011,4315844557797051765]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":104,"id":{"name":"rand","disambiguator":[12595405484215428940,3277764833164151293]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":105,"id":{"name":"rand_core","disambiguator":[9695739335742148087,3350609380609721591]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":106,"id":{"name":"getrandom","disambiguator":[721712733833990502,8068492601755202008]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":107,"id":{"name":"rand_chacha","disambiguator":[18386585608818774067,16734859429308081802]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":108,"id":{"name":"ppv_lite86","disambiguator":[9012823233149414985,12709374118519403332]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":109,"id":{"name":"rand_pcg","disambiguator":[14205715846604557881,9026229420947062403]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":110,"id":{"name":"base58","disambiguator":[4701869954536710673,4933779238253571765]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":111,"id":{"name":"zeroize","disambiguator":[12600490423205237427,13703553924033596596]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":112,"id":{"name":"zeroize_derive","disambiguator":[6791057603773303640,10255159055154177175]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":113,"id":{"name":"secrecy","disambiguator":[13665428742963377135,10358993108067824278]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":114,"id":{"name":"ed25519_dalek","disambiguator":[10161032220260144010,5049022714650660596]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":115,"id":{"name":"ed25519","disambiguator":[3667223071737042030,5938266942611017600]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":116,"id":{"name":"signature","disambiguator":[8501578318870031785,2089574511804716723]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":117,"id":{"name":"curve25519_dalek","disambiguator":[1895300685701336271,3284514164842471290]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":118,"id":{"name":"subtle","disambiguator":[16845482190606892653,7628616911900593609]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":119,"id":{"name":"substrate_bip39","disambiguator":[15040743243417684919,8097759232466480393]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":120,"id":{"name":"sha2","disambiguator":[7502889032885125422,8029496121313753874]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":121,"id":{"name":"block_buffer","disambiguator":[6085059999097579019,13508834977892092343]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":122,"id":{"name":"block_padding","disambiguator":[11213847389540043408,5773741877176024568]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":123,"id":{"name":"byte_tools","disambiguator":[4918626438044735095,1788833895175731416]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":124,"id":{"name":"generic_array","disambiguator":[7569539131966573992,12595456205992844520]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":125,"id":{"name":"fake_simd","disambiguator":[7886874525621945039,13318892849147012013]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":126,"id":{"name":"opaque_debug","disambiguator":[5860403889482220672,4200851239586967860]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":127,"id":{"name":"digest","disambiguator":[12030098888388976221,12756676556567316564]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":128,"id":{"name":"hmac","disambiguator":[7769854462545934409,10450748752018542803]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":129,"id":{"name":"crypto_mac","disambiguator":[2968465490836797187,1234961993664078899]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":130,"id":{"name":"subtle","disambiguator":[13655599352942753200,16151593159590929241]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":131,"id":{"name":"pbkdf2","disambiguator":[8691584835032449535,3077999064683338044]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/vrf.rs","num":132,"id":{"name":"schnorrkel","disambiguator":[5327049476477202046,14868920278246650238]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":133,"id":{"name":"arrayref","disambiguator":[5165681792416966554,1859030618936530492]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":134,"id":{"name":"curve25519_dalek","disambiguator":[16526930195884831984,6337875962745892515]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/vrf.rs","num":135,"id":{"name":"merlin","disambiguator":[1987101126529635544,17384976189451351287]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":136,"id":{"name":"keccak","disambiguator":[2908271963410424121,16070015698278761743]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":137,"id":{"name":"bip39","disambiguator":[13601490727936476633,10685843279776520322]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":138,"id":{"name":"thiserror","disambiguator":[16272146989157719109,6390288912320035552]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":139,"id":{"name":"thiserror_impl","disambiguator":[14611723571195345561,3031675156489057125]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":140,"id":{"name":"rustc_hash","disambiguator":[10799712089893873097,15642320727124619119]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":141,"id":{"name":"anyhow","disambiguator":[7952123986758064053,15951195769833855501]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":142,"id":{"name":"unicode_normalization","disambiguator":[8528847639573706219,12600813833467855520]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":143,"id":{"name":"tinyvec","disambiguator":[17147209182429324016,10148935675228012347]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":144,"id":{"name":"tinyvec_macros","disambiguator":[9212177588509164164,5380668086084502803]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":145,"id":{"name":"hmac","disambiguator":[7441549051652238671,126331948327783723]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":146,"id":{"name":"crypto_mac","disambiguator":[16991283631536389987,5481341810820038466]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":147,"id":{"name":"pbkdf2","disambiguator":[4319017270873759292,6509055872629890036]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":148,"id":{"name":"secp256k1","disambiguator":[17309264091554170051,14658614225545677340]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":149,"id":{"name":"hmac_drbg","disambiguator":[4767657448249682988,1803812163090762676]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":150,"id":{"name":"hash_db","disambiguator":[5082083104797944904,12471584526911736317]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":151,"id":{"name":"hash256_std_hasher","disambiguator":[4745241176987882606,8396120512497440654]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":152,"id":{"name":"parity_util_mem","disambiguator":[12948463249407593821,17793083940498040041]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":153,"id":{"name":"parity_util_mem_derive","disambiguator":[10645164648013415062,12223060792603263501]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":154,"id":{"name":"hashbrown","disambiguator":[4714527057355639001,5265266751565251781]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":155,"id":{"name":"ahash","disambiguator":[4895849968884971193,1866193895952659697]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":156,"id":{"name":"dyn_clonable","disambiguator":[817111032421828775,16631547109237281911]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":157,"id":{"name":"dyn_clone","disambiguator":[3494622076345203904,305288049868344396]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":158,"id":{"name":"dyn_clonable_impl","disambiguator":[15694054143351586668,4846876968602413132]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","num":159,"id":{"name":"futures","disambiguator":[6719234752700041570,5445135115274796867]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":160,"id":{"name":"futures_core","disambiguator":[1822748355131919634,9166734939099403570]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":161,"id":{"name":"futures_util","disambiguator":[3851861367966492071,17065819987119799045]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":162,"id":{"name":"pin_utils","disambiguator":[3745280634468883476,9481521265985202326]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":163,"id":{"name":"proc_macro_hack","disambiguator":[16679551933582400274,17806438591852806921]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":164,"id":{"name":"futures_task","disambiguator":[13299446338594167574,824580339805784235]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":165,"id":{"name":"futures_sink","disambiguator":[13757754541565226665,5016823584177272773]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":166,"id":{"name":"futures_channel","disambiguator":[15411149550074779248,6762242607926683601]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":167,"id":{"name":"slab","disambiguator":[12314209455201404546,12853708085438978694]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":168,"id":{"name":"futures_io","disambiguator":[11869943109715479286,7841687225314252844]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":169,"id":{"name":"futures_macro","disambiguator":[4746555587566248889,11486042978139273141]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":170,"id":{"name":"futures_executor","disambiguator":[15960585461751904621,16105986512593907129]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":171,"id":{"name":"num_cpus","disambiguator":[17199654833816750295,8498294729582859183]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","num":172,"id":{"name":"async_trait","disambiguator":[14745600176395852154,13378998996986789782]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","num":173,"id":{"name":"derive_more","disambiguator":[4049812322593200519,13797402089416125928]}}],"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":686,"byte_end":12158,"line_start":18,"line_end":365,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":686,"byte_end":12158,"line_start":18,"line_end":365,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":80},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":480},{"krate":0,"index":95},{"krate":0,"index":482},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":329},{"krate":0,"index":346},{"krate":0,"index":344},{"krate":0,"index":348},{"krate":0,"index":102},{"krate":0,"index":119},{"krate":0,"index":412},{"krate":0,"index":415},{"krate":0,"index":417},{"krate":0,"index":420},{"krate":0,"index":422}],"decl_id":null,"docs":" Keystore traits\n","sig":null,"attributes":[{"value":"/ Keystore traits","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":686,"byte_end":705,"line_start":18,"line_end":18,"column_start":1,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"testing","qualname":"::testing","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":424},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":430},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":120},{"krate":0,"index":122},{"krate":0,"index":30},{"krate":0,"index":124},{"krate":0,"index":41},{"krate":0,"index":76},{"krate":0,"index":78}],"decl_id":null,"docs":" Types that should only be used for testing!\n","sig":null,"attributes":[{"value":"/ Types that should only be used for testing!","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","byte_start":12846,"byte_end":12893,"line_start":18,"line_end":18,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":120},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","byte_start":13340,"byte_end":13348,"line_start":35,"line_end":35,"column_start":12,"column_end":20},"name":"KeyStore","qualname":"::testing::KeyStore","value":"KeyStore {  }","parent":null,"children":[{"krate":0,"index":121}],"decl_id":null,"docs":" A keystore implementation usable in tests.\n","sig":null,"attributes":[{"value":"/ A keystore implementation usable in tests.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","byte_start":13263,"byte_end":13309,"line_start":33,"line_end":33,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","byte_start":13557,"byte_end":13560,"line_start":42,"line_end":42,"column_start":9,"column_end":12},"name":"new","qualname":"<KeyStore>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of `Self`.\n","sig":null,"attributes":[{"value":"/ Creates a new instance of `Self`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","byte_start":13511,"byte_end":13548,"line_start":41,"line_end":41,"column_start":2,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":80},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/vrf.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"vrf","qualname":"::vrf","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/vrf.rs","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":464},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":468},{"krate":0,"index":85},{"krate":0,"index":206},{"krate":0,"index":264},{"krate":0,"index":258},{"krate":0,"index":252},{"krate":0,"index":213},{"krate":0,"index":266},{"krate":0,"index":275},{"krate":0,"index":269},{"krate":0,"index":277},{"krate":0,"index":323},{"krate":0,"index":280},{"krate":0,"index":86}],"decl_id":null,"docs":" VRF-specifc data types and helpers\n","sig":null,"attributes":[{"value":"/ VRF-specifc data types and helpers","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/vrf.rs","byte_start":24465,"byte_end":24503,"line_start":18,"line_end":18,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":207},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/vrf.rs","byte_start":24854,"byte_end":24859,"line_start":30,"line_end":30,"column_start":2,"column_end":7},"name":"Bytes","qualname":"::vrf::VRFTranscriptValue::Bytes","value":"VRFTranscriptValue::Bytes(Vec<u8>)","parent":{"krate":0,"index":206},"children":[],"decl_id":null,"docs":" Value is an array of bytes\n","sig":null,"attributes":[{"value":"/ Value is an array of bytes","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/vrf.rs","byte_start":24822,"byte_end":24852,"line_start":29,"line_end":29,"column_start":2,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":210},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/vrf.rs","byte_start":24899,"byte_end":24902,"line_start":32,"line_end":32,"column_start":2,"column_end":5},"name":"U64","qualname":"::vrf::VRFTranscriptValue::U64","value":"VRFTranscriptValue::U64(u64)","parent":{"krate":0,"index":206},"children":[],"decl_id":null,"docs":" Value is a u64 integer\n","sig":null,"attributes":[{"value":"/ Value is a u64 integer","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/vrf.rs","byte_start":24871,"byte_end":24897,"line_start":31,"line_end":31,"column_start":2,"column_end":28}}]},{"kind":"Enum","id":{"krate":0,"index":206},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/vrf.rs","byte_start":24800,"byte_end":24818,"line_start":28,"line_end":28,"column_start":10,"column_end":28},"name":"VRFTranscriptValue","qualname":"::vrf::VRFTranscriptValue","value":"pub enum VRFTranscriptValue {\n\n    /// Value is an array of bytes\n    Bytes(Vec<u8>),\n\n    /// Value is a u64 integer\n    U64(u64),\n}","parent":null,"children":[{"krate":0,"index":207},{"krate":0,"index":210}],"decl_id":null,"docs":" An enum whose variants represent possible\n accepted values to construct the VRF transcript\n","sig":null,"attributes":[{"value":"/ An enum whose variants represent possible","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/vrf.rs","byte_start":24593,"byte_end":24638,"line_start":24,"line_end":24,"column_start":1,"column_end":46}},{"value":"/ accepted values to construct the VRF transcript","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/vrf.rs","byte_start":24639,"byte_end":24690,"line_start":25,"line_end":25,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":266},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/vrf.rs","byte_start":24971,"byte_end":24988,"line_start":36,"line_end":36,"column_start":12,"column_end":29},"name":"VRFTranscriptData","qualname":"::vrf::VRFTranscriptData","value":"VRFTranscriptData { label, items }","parent":null,"children":[{"krate":0,"index":267},{"krate":0,"index":268}],"decl_id":null,"docs":" VRF Transcript data\n","sig":null,"attributes":[{"value":"/ VRF Transcript data","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/vrf.rs","byte_start":24911,"byte_end":24934,"line_start":34,"line_end":34,"column_start":1,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":267},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/vrf.rs","byte_start":25024,"byte_end":25029,"line_start":38,"line_end":38,"column_start":6,"column_end":11},"name":"label","qualname":"::vrf::VRFTranscriptData::label","value":"&'static [u8]","parent":{"krate":0,"index":266},"children":[],"decl_id":null,"docs":" The transcript's label\n","sig":null,"attributes":[{"value":"/ The transcript's label","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/vrf.rs","byte_start":24992,"byte_end":25018,"line_start":37,"line_end":37,"column_start":2,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":268},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/vrf.rs","byte_start":25109,"byte_end":25114,"line_start":40,"line_end":40,"column_start":6,"column_end":11},"name":"items","qualname":"::vrf::VRFTranscriptData::items","value":"std::vec::Vec<(&'static str, vrf::VRFTranscriptValue)>","parent":{"krate":0,"index":266},"children":[],"decl_id":null,"docs":" Additional data to be registered into the transcript\n","sig":null,"attributes":[{"value":"/ Additional data to be registered into the transcript","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/vrf.rs","byte_start":25047,"byte_end":25103,"line_start":39,"line_end":39,"column_start":2,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":277},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/vrf.rs","byte_start":25268,"byte_end":25280,"line_start":44,"line_end":44,"column_start":12,"column_end":24},"name":"VRFSignature","qualname":"::vrf::VRFSignature","value":"VRFSignature { output, proof }","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":279}],"decl_id":null,"docs":" VRF signature data\n","sig":null,"attributes":[{"value":"/ VRF signature data","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/vrf.rs","byte_start":25159,"byte_end":25181,"line_start":42,"line_end":42,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":278},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/vrf.rs","byte_start":25318,"byte_end":25324,"line_start":46,"line_end":46,"column_start":6,"column_end":12},"name":"output","qualname":"::vrf::VRFSignature::output","value":"schnorrkel::vrf::VRFOutput","parent":{"krate":0,"index":277},"children":[],"decl_id":null,"docs":" The VRFOutput serialized\n","sig":null,"attributes":[{"value":"/ The VRFOutput serialized","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/vrf.rs","byte_start":25284,"byte_end":25312,"line_start":45,"line_end":45,"column_start":2,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":279},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/vrf.rs","byte_start":25371,"byte_end":25376,"line_start":48,"line_end":48,"column_start":6,"column_end":11},"name":"proof","qualname":"::vrf::VRFSignature::proof","value":"schnorrkel::vrf::VRFProof","parent":{"krate":0,"index":277},"children":[],"decl_id":null,"docs":" The calculated VRFProof\n","sig":null,"attributes":[{"value":"/ The calculated VRFProof","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/vrf.rs","byte_start":25338,"byte_end":25365,"line_start":47,"line_end":47,"column_start":2,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":86},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/vrf.rs","byte_start":25482,"byte_end":25497,"line_start":54,"line_end":54,"column_start":8,"column_end":23},"name":"make_transcript","qualname":"::vrf::make_transcript","value":"pub fn make_transcript(VRFTranscriptData) -> Transcript","parent":null,"children":[],"decl_id":null,"docs":" Construct a `Transcript` object from data.","sig":null,"attributes":[{"value":"/ Construct a `Transcript` object from data.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/vrf.rs","byte_start":25391,"byte_end":25437,"line_start":51,"line_end":51,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/vrf.rs","byte_start":25438,"byte_end":25441,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Returns `merlin::Transcript`","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/vrf.rs","byte_start":25442,"byte_end":25474,"line_start":53,"line_end":53,"column_start":1,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":330},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":1144,"byte_end":1159,"line_start":36,"line_end":36,"column_start":2,"column_end":17},"name":"KeyNotSupported","qualname":"::Error::KeyNotSupported","value":"Error::KeyNotSupported(KeyTypeId)","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Public key type is not supported\n","sig":null,"attributes":[{"value":"/ Public key type is not supported","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":1059,"byte_end":1095,"line_start":34,"line_end":34,"column_start":2,"column_end":38}},{"value":"display(fmt = \"Key not supported: {:?}\", _0)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":1097,"byte_end":1142,"line_start":35,"line_end":35,"column_start":2,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":333},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":1268,"byte_end":1280,"line_start":39,"line_end":39,"column_start":2,"column_end":14},"name":"PairNotFound","qualname":"::Error::PairNotFound","value":"Error::PairNotFound(String)","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Pair not found for public key and KeyTypeId\n","sig":null,"attributes":[{"value":"/ Pair not found for public key and KeyTypeId","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":1173,"byte_end":1220,"line_start":37,"line_end":37,"column_start":2,"column_end":49}},{"value":"display(fmt = \"Pair was not found: {}\", _0)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":1222,"byte_end":1266,"line_start":38,"line_end":38,"column_start":2,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":336},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":1357,"byte_end":1372,"line_start":42,"line_end":42,"column_start":2,"column_end":17},"name":"ValidationError","qualname":"::Error::ValidationError","value":"Error::ValidationError(String)","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Validation error\n","sig":null,"attributes":[{"value":"/ Validation error","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":1291,"byte_end":1311,"line_start":40,"line_end":40,"column_start":2,"column_end":22}},{"value":"display(fmt = \"Validation error: {}\", _0)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":1313,"byte_end":1355,"line_start":41,"line_end":41,"column_start":2,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":339},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":1449,"byte_end":1460,"line_start":45,"line_end":45,"column_start":2,"column_end":13},"name":"Unavailable","qualname":"::Error::Unavailable","value":"Error::Unavailable","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Keystore unavailable\n","sig":null,"attributes":[{"value":"/ Keystore unavailable","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":1383,"byte_end":1407,"line_start":43,"line_end":43,"column_start":2,"column_end":26}},{"value":"display(fmt = \"Keystore unavailable\")","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":1409,"byte_end":1447,"line_start":44,"line_end":44,"column_start":2,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":341},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":1549,"byte_end":1554,"line_start":48,"line_end":48,"column_start":2,"column_end":7},"name":"Other","qualname":"::Error::Other","value":"Error::Other(String)","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Programming errors\n","sig":null,"attributes":[{"value":"/ Programming errors","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":1463,"byte_end":1485,"line_start":46,"line_end":46,"column_start":2,"column_end":24}},{"value":"display(fmt = \"An unknown keystore error occurred: {}\", _0)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":1487,"byte_end":1547,"line_start":47,"line_end":47,"column_start":2,"column_end":62}}]},{"kind":"Enum","id":{"krate":0,"index":329},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":1050,"byte_end":1055,"line_start":33,"line_end":33,"column_start":10,"column_end":15},"name":"Error","qualname":"::Error","value":"pub enum Error {\n\n    /// Public key type is not supported\n    #[display(fmt = \"Key not supported: {:?}\", _0)]\n    KeyNotSupported(KeyTypeId),\n\n    /// Pair not found for public key and KeyTypeId\n    #[display(fmt = \"Pair was not found: {}\", _0)]\n    PairNotFound(String),\n\n    /// Validation error\n    #[display(fmt = \"Validation error: {}\", _0)]\n    ValidationError(String),\n\n    /// Keystore unavailable\n    #[display(fmt = \"Keystore unavailable\")]\n    Unavailable,\n\n    /// Programming errors\n    #[display(fmt = \"An unknown keystore error occurred: {}\", _0)]\n    Other(String),\n}","parent":null,"children":[{"krate":0,"index":330},{"krate":0,"index":333},{"krate":0,"index":336},{"krate":0,"index":339},{"krate":0,"index":341}],"decl_id":null,"docs":" CryptoStore error\n","sig":null,"attributes":[{"value":"/ CryptoStore error","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":980,"byte_end":1001,"line_start":31,"line_end":31,"column_start":1,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":348},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":1657,"byte_end":1668,"line_start":53,"line_end":53,"column_start":11,"column_end":22},"name":"CryptoStore","qualname":"::CryptoStore","value":"CryptoStore: Send + Sync","parent":null,"children":[{"krate":0,"index":349},{"krate":0,"index":352},{"krate":0,"index":356},{"krate":0,"index":359},{"krate":0,"index":363},{"krate":0,"index":366},{"krate":0,"index":370},{"krate":0,"index":375},{"krate":0,"index":378},{"krate":0,"index":381},{"krate":0,"index":385},{"krate":0,"index":390},{"krate":0,"index":399},{"krate":0,"index":408}],"decl_id":null,"docs":" Something that generates, stores and provides access to keys.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":1755,"byte_end":1774,"line_start":55,"line_end":55,"column_start":11,"column_end":30},"name":"sr25519_public_keys","qualname":"::CryptoStore::sr25519_public_keys","value":"pub fn sr25519_public_keys<'life0, 'async_trait>(&'life0 Self, KeyTypeId)\n->\n    ::core::pin::Pin<Box<::core::future::Future<Output =\n                         Vec<sr25519::Public>> + ::core::marker::Send +\n                         'async_trait>> where 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":348},"children":[],"decl_id":null,"docs":" Returns all sr25519 public keys for the given key type.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":1632,"byte_end":1646,"line_start":52,"line_end":52,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":2060,"byte_end":2080,"line_start":61,"line_end":61,"column_start":11,"column_end":31},"name":"sr25519_generate_new","qualname":"::CryptoStore::sr25519_generate_new","value":"pub fn sr25519_generate_new<'life0, 'life1,\n                            'async_trait>(&'life0 Self, KeyTypeId,\n                                          Option<&'life1 str>)\n->\n    ::core::pin::Pin<Box<::core::future::Future<Output =\n                         Result<sr25519::Public, Error>> +\n                         ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":348},"children":[],"decl_id":null,"docs":" Generate a new sr25519 key pair for the given key type and an optional seed.","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":1632,"byte_end":1646,"line_start":52,"line_end":52,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":2239,"byte_end":2258,"line_start":67,"line_end":67,"column_start":11,"column_end":30},"name":"ed25519_public_keys","qualname":"::CryptoStore::ed25519_public_keys","value":"pub fn ed25519_public_keys<'life0, 'async_trait>(&'life0 Self, KeyTypeId)\n->\n    ::core::pin::Pin<Box<::core::future::Future<Output =\n                         Vec<ed25519::Public>> + ::core::marker::Send +\n                         'async_trait>> where 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":348},"children":[],"decl_id":null,"docs":" Returns all ed25519 public keys for the given key type.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":1632,"byte_end":1646,"line_start":52,"line_end":52,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":2544,"byte_end":2564,"line_start":73,"line_end":73,"column_start":11,"column_end":31},"name":"ed25519_generate_new","qualname":"::CryptoStore::ed25519_generate_new","value":"pub fn ed25519_generate_new<'life0, 'life1,\n                            'async_trait>(&'life0 Self, KeyTypeId,\n                                          Option<&'life1 str>)\n->\n    ::core::pin::Pin<Box<::core::future::Future<Output =\n                         Result<ed25519::Public, Error>> +\n                         ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":348},"children":[],"decl_id":null,"docs":" Generate a new ed25519 key pair for the given key type and an optional seed.","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":1632,"byte_end":1646,"line_start":52,"line_end":52,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":2721,"byte_end":2738,"line_start":79,"line_end":79,"column_start":11,"column_end":28},"name":"ecdsa_public_keys","qualname":"::CryptoStore::ecdsa_public_keys","value":"pub fn ecdsa_public_keys<'life0, 'async_trait>(&'life0 Self, KeyTypeId)\n->\n    ::core::pin::Pin<Box<::core::future::Future<Output = Vec<ecdsa::Public>> +\n                         ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":348},"children":[],"decl_id":null,"docs":" Returns all ecdsa public keys for the given key type.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":1632,"byte_end":1646,"line_start":52,"line_end":52,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":3020,"byte_end":3038,"line_start":85,"line_end":85,"column_start":11,"column_end":29},"name":"ecdsa_generate_new","qualname":"::CryptoStore::ecdsa_generate_new","value":"pub fn ecdsa_generate_new<'life0, 'life1,\n                          'async_trait>(&'life0 Self, KeyTypeId,\n                                        Option<&'life1 str>)\n->\n    ::core::pin::Pin<Box<::core::future::Future<Output =\n                         Result<ecdsa::Public, Error>> +\n                         ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":348},"children":[],"decl_id":null,"docs":" Generate a new ecdsa key pair for the given key type and an optional seed.","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":1632,"byte_end":1646,"line_start":52,"line_end":52,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":3395,"byte_end":3409,"line_start":97,"line_end":97,"column_start":11,"column_end":25},"name":"insert_unknown","qualname":"::CryptoStore::insert_unknown","value":"pub fn insert_unknown<'life0, 'life1, 'life2,\n                      'async_trait>(&'life0 Self, KeyTypeId, &'life1 str,\n                                    &'life2 [u8])\n->\n    ::core::pin::Pin<Box<::core::future::Future<Output = Result<(), ()>> +\n                         ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, 'life1:'async_trait, 'life2:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":348},"children":[],"decl_id":null,"docs":" Insert a new key. This doesn't require any known of the crypto; but a public key must be\n manually provided.","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":1632,"byte_end":1646,"line_start":52,"line_end":52,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":3710,"byte_end":3724,"line_start":108,"line_end":108,"column_start":11,"column_end":25},"name":"supported_keys","qualname":"::CryptoStore::supported_keys","value":"pub fn supported_keys<'life0,\n                      'async_trait>(&'life0 Self, KeyTypeId,\n                                    Vec<CryptoTypePublicPair>)\n->\n    ::core::pin::Pin<Box<::core::future::Future<Output =\n                         Result<Vec<CryptoTypePublicPair>, Error>> +\n                         ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":348},"children":[],"decl_id":null,"docs":" Find intersection between provided keys and supported keys","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":1632,"byte_end":1646,"line_start":52,"line_end":52,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":3933,"byte_end":3937,"line_start":116,"line_end":116,"column_start":11,"column_end":15},"name":"keys","qualname":"::CryptoStore::keys","value":"pub fn keys<'life0, 'async_trait>(&'life0 Self, KeyTypeId)\n->\n    ::core::pin::Pin<Box<::core::future::Future<Output =\n                         Result<Vec<CryptoTypePublicPair>, Error>> +\n                         ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":348},"children":[],"decl_id":null,"docs":" List all supported keys","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":1632,"byte_end":1646,"line_start":52,"line_end":52,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":4168,"byte_end":4176,"line_start":121,"line_end":121,"column_start":11,"column_end":19},"name":"has_keys","qualname":"::CryptoStore::has_keys","value":"pub fn has_keys<'life0, 'life1,\n                'async_trait>(&'life0 Self, &'life1 [(Vec<u8>, KeyTypeId)])\n->\n    ::core::pin::Pin<Box<::core::future::Future<Output = bool> +\n                         ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":348},"children":[],"decl_id":null,"docs":" Checks if the private keys for the given public key and key type combinations exist.","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":1632,"byte_end":1646,"line_start":52,"line_end":52,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":4449,"byte_end":4458,"line_start":130,"line_end":130,"column_start":11,"column_end":20},"name":"sign_with","qualname":"::CryptoStore::sign_with","value":"pub fn sign_with<'life0, 'life1, 'life2,\n                 'async_trait>(&'life0 Self, KeyTypeId,\n                               &'life1 CryptoTypePublicPair, &'life2 [u8])\n->\n    ::core::pin::Pin<Box<::core::future::Future<Output =\n                         Result<Vec<u8>, Error>> + ::core::marker::Send +\n                         'async_trait>> where 'life0:'async_trait,\n'life1:'async_trait, 'life2:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":348},"children":[],"decl_id":null,"docs":" Sign with key","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":1632,"byte_end":1646,"line_start":52,"line_end":52,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":4787,"byte_end":4800,"line_start":143,"line_end":143,"column_start":11,"column_end":24},"name":"sign_with_any","qualname":"::CryptoStore::sign_with_any","value":"pub fn sign_with_any<'life0, 'life1,\n                     'async_trait>(&'life0 Self, KeyTypeId,\n                                   Vec<CryptoTypePublicPair>, &'life1 [u8])\n->\n    ::core::pin::Pin<Box<::core::future::Future<Output =\n                         Result<(CryptoTypePublicPair, Vec<u8>), Error>> +\n                         ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":348},"children":[],"decl_id":null,"docs":" Sign with any key","sig":null,"attributes":[{"value":"allow(clippy :: used_underscore_binding)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":1632,"byte_end":1646,"line_start":52,"line_end":52,"column_start":1,"column_end":15}},{"value":"must_use","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":1632,"byte_end":1646,"line_start":52,"line_end":52,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":5514,"byte_end":5527,"line_start":168,"line_end":168,"column_start":11,"column_end":24},"name":"sign_with_all","qualname":"::CryptoStore::sign_with_all","value":"pub fn sign_with_all<'life0, 'life1,\n                     'async_trait>(&'life0 Self, KeyTypeId,\n                                   Vec<CryptoTypePublicPair>, &'life1 [u8])\n->\n    ::core::pin::Pin<Box<::core::future::Future<Output =\n                         Result<Vec<Result<Vec<u8>, Error>>, ()>> +\n                         ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":348},"children":[],"decl_id":null,"docs":" Sign with all keys","sig":null,"attributes":[{"value":"allow(clippy :: used_underscore_binding)","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":1632,"byte_end":1646,"line_start":52,"line_end":52,"column_start":1,"column_end":15}},{"value":"must_use","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":1632,"byte_end":1646,"line_start":52,"line_end":52,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":6390,"byte_end":6406,"line_start":194,"line_end":194,"column_start":11,"column_end":27},"name":"sr25519_vrf_sign","qualname":"::CryptoStore::sr25519_vrf_sign","value":"pub fn sr25519_vrf_sign<'life0, 'life1,\n                        'async_trait>(&'life0 Self, KeyTypeId,\n                                      &'life1 sr25519::Public,\n                                      VRFTranscriptData)\n->\n    ::core::pin::Pin<Box<::core::future::Future<Output =\n                         Result<VRFSignature, Error>> + ::core::marker::Send +\n                         'async_trait>> where 'life0:'async_trait,\n'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":348},"children":[],"decl_id":null,"docs":" Generate VRF signature for given transcript data.","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":1632,"byte_end":1646,"line_start":52,"line_end":52,"column_start":1,"column_end":15}}]},{"kind":"Trait","id":{"krate":0,"index":102},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":7028,"byte_end":7043,"line_start":210,"line_end":210,"column_start":11,"column_end":26},"name":"SyncCryptoStore","qualname":"::SyncCryptoStore","value":"SyncCryptoStore: CryptoStore + Send + Sync","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":116},{"krate":0,"index":118}],"decl_id":null,"docs":" Sync version of the CryptoStore","sig":null,"attributes":[{"value":"/ Sync version of the CryptoStore","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":6544,"byte_end":6579,"line_start":202,"line_end":202,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":6580,"byte_end":6583,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ Some parts of Substrate still rely on a sync version of the `CryptoStore`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":6584,"byte_end":6662,"line_start":204,"line_end":204,"column_start":1,"column_end":79}},{"value":"/ To make the transition easier this auto trait wraps any async `CryptoStore` and","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":6663,"byte_end":6746,"line_start":205,"line_end":205,"column_start":1,"column_end":84}},{"value":"/ exposes a `sync` interface using `block_on`. Usage of this is deprecated and it","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":6747,"byte_end":6830,"line_start":206,"line_end":206,"column_start":1,"column_end":84}},{"value":"/ will be removed as soon as the internal usage has transitioned successfully.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":6831,"byte_end":6911,"line_start":207,"line_end":207,"column_start":1,"column_end":81}},{"value":"/ If you are starting out building something new **do not use this**,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":6912,"byte_end":6983,"line_start":208,"line_end":208,"column_start":1,"column_end":72}},{"value":"/ instead, use [`CryptoStore`].","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":6984,"byte_end":7017,"line_start":209,"line_end":209,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":7138,"byte_end":7157,"line_start":212,"line_end":212,"column_start":5,"column_end":24},"name":"sr25519_public_keys","qualname":"::SyncCryptoStore::sr25519_public_keys","value":"pub fn sr25519_public_keys(&Self, KeyTypeId) -> Vec<sr25519::Public>","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" Returns all sr25519 public keys for the given key type.\n","sig":null,"attributes":[{"value":"/ Returns all sr25519 public keys for the given key type.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":7074,"byte_end":7133,"line_start":211,"line_end":211,"column_start":2,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":7438,"byte_end":7458,"line_start":219,"line_end":219,"column_start":5,"column_end":25},"name":"sr25519_generate_new","qualname":"::SyncCryptoStore::sr25519_generate_new","value":"pub fn sr25519_generate_new(&Self, KeyTypeId, Option<&str>)\n-> Result<sr25519::Public, Error>","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" Generate a new sr25519 key pair for the given key type and an optional seed.","sig":null,"attributes":[{"value":"/ Generate a new sr25519 key pair for the given key type and an optional seed.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":7207,"byte_end":7287,"line_start":214,"line_end":214,"column_start":2,"column_end":82}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":7289,"byte_end":7292,"line_start":215,"line_end":215,"column_start":2,"column_end":5}},{"value":"/ If the given seed is `Some(_)`, the key pair will only be stored in memory.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":7294,"byte_end":7373,"line_start":216,"line_end":216,"column_start":2,"column_end":81}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":7375,"byte_end":7378,"line_start":217,"line_end":217,"column_start":2,"column_end":5}},{"value":"/ Returns the public key of the generated key pair.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":7380,"byte_end":7433,"line_start":218,"line_end":218,"column_start":2,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":7612,"byte_end":7631,"line_start":226,"line_end":226,"column_start":5,"column_end":24},"name":"ed25519_public_keys","qualname":"::SyncCryptoStore::ed25519_public_keys","value":"pub fn ed25519_public_keys(&Self, KeyTypeId) -> Vec<ed25519::Public>","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" Returns all ed25519 public keys for the given key type.\n","sig":null,"attributes":[{"value":"/ Returns all ed25519 public keys for the given key type.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":7548,"byte_end":7607,"line_start":225,"line_end":225,"column_start":2,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":7912,"byte_end":7932,"line_start":233,"line_end":233,"column_start":5,"column_end":25},"name":"ed25519_generate_new","qualname":"::SyncCryptoStore::ed25519_generate_new","value":"pub fn ed25519_generate_new(&Self, KeyTypeId, Option<&str>)\n-> Result<ed25519::Public, Error>","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" Generate a new ed25519 key pair for the given key type and an optional seed.","sig":null,"attributes":[{"value":"/ Generate a new ed25519 key pair for the given key type and an optional seed.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":7681,"byte_end":7761,"line_start":228,"line_end":228,"column_start":2,"column_end":82}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":7763,"byte_end":7766,"line_start":229,"line_end":229,"column_start":2,"column_end":5}},{"value":"/ If the given seed is `Some(_)`, the key pair will only be stored in memory.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":7768,"byte_end":7847,"line_start":230,"line_end":230,"column_start":2,"column_end":81}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":7849,"byte_end":7852,"line_start":231,"line_end":231,"column_start":2,"column_end":5}},{"value":"/ Returns the public key of the generated key pair.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":7854,"byte_end":7907,"line_start":232,"line_end":232,"column_start":2,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":8084,"byte_end":8101,"line_start":240,"line_end":240,"column_start":5,"column_end":22},"name":"ecdsa_public_keys","qualname":"::SyncCryptoStore::ecdsa_public_keys","value":"pub fn ecdsa_public_keys(&Self, KeyTypeId) -> Vec<ecdsa::Public>","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" Returns all ecdsa public keys for the given key type.\n","sig":null,"attributes":[{"value":"/ Returns all ecdsa public keys for the given key type.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":8022,"byte_end":8079,"line_start":239,"line_end":239,"column_start":2,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":8378,"byte_end":8396,"line_start":247,"line_end":247,"column_start":5,"column_end":23},"name":"ecdsa_generate_new","qualname":"::SyncCryptoStore::ecdsa_generate_new","value":"pub fn ecdsa_generate_new(&Self, KeyTypeId, Option<&str>)\n-> Result<ecdsa::Public, Error>","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" Generate a new ecdsa key pair for the given key type and an optional seed.","sig":null,"attributes":[{"value":"/ Generate a new ecdsa key pair for the given key type and an optional seed.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":8149,"byte_end":8227,"line_start":242,"line_end":242,"column_start":2,"column_end":80}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":8229,"byte_end":8232,"line_start":243,"line_end":243,"column_start":2,"column_end":5}},{"value":"/ If the given seed is `Some(_)`, the key pair will only be stored in memory.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":8234,"byte_end":8313,"line_start":244,"line_end":244,"column_start":2,"column_end":81}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":8315,"byte_end":8318,"line_start":245,"line_end":245,"column_start":2,"column_end":5}},{"value":"/ Returns the public key of the generated key pair.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":8320,"byte_end":8373,"line_start":246,"line_end":246,"column_start":2,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":8747,"byte_end":8761,"line_start":259,"line_end":259,"column_start":5,"column_end":19},"name":"insert_unknown","qualname":"::SyncCryptoStore::insert_unknown","value":"pub fn insert_unknown(&Self, KeyTypeId, &str, &[u8]) -> Result<(), ()>","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" Insert a new key. This doesn't require any known of the crypto; but a public key must be\n manually provided.","sig":null,"attributes":[{"value":"/ Insert a new key. This doesn't require any known of the crypto; but a public key must be","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":8484,"byte_end":8576,"line_start":253,"line_end":253,"column_start":2,"column_end":94}},{"value":"/ manually provided.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":8578,"byte_end":8600,"line_start":254,"line_end":254,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":8602,"byte_end":8605,"line_start":255,"line_end":255,"column_start":2,"column_end":5}},{"value":"/ Places it into the file system store.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":8607,"byte_end":8648,"line_start":256,"line_end":256,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":8650,"byte_end":8653,"line_start":257,"line_end":257,"column_start":2,"column_end":5}},{"value":"/ `Err` if there's some sort of weird filesystem error, but should generally be `Ok`.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":8655,"byte_end":8742,"line_start":258,"line_end":258,"column_start":2,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":9051,"byte_end":9065,"line_start":265,"line_end":265,"column_start":5,"column_end":19},"name":"supported_keys","qualname":"::SyncCryptoStore::supported_keys","value":"pub fn supported_keys(&Self, KeyTypeId, Vec<CryptoTypePublicPair>)\n-> Result<Vec<CryptoTypePublicPair>, Error>","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" Find intersection between provided keys and supported keys","sig":null,"attributes":[{"value":"/ Find intersection between provided keys and supported keys","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":8838,"byte_end":8900,"line_start":261,"line_end":261,"column_start":2,"column_end":64}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":8902,"byte_end":8905,"line_start":262,"line_end":262,"column_start":2,"column_end":5}},{"value":"/ Provided a list of (CryptoTypeId,[u8]) pairs, this would return","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":8907,"byte_end":8974,"line_start":263,"line_end":263,"column_start":2,"column_end":69}},{"value":"/ a filtered set of public keys which are supported by the keystore.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":8976,"byte_end":9046,"line_start":264,"line_end":264,"column_start":2,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":9269,"byte_end":9273,"line_start":274,"line_end":274,"column_start":5,"column_end":9},"name":"keys","qualname":"::SyncCryptoStore::keys","value":"pub fn keys(&Self, KeyTypeId) -> Result<Vec<CryptoTypePublicPair>, Error>","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" List all supported keys","sig":null,"attributes":[{"value":"/ List all supported keys","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":9177,"byte_end":9204,"line_start":271,"line_end":271,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":9206,"byte_end":9209,"line_start":272,"line_end":272,"column_start":2,"column_end":5}},{"value":"/ Returns a set of public keys the signer supports.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":9211,"byte_end":9264,"line_start":273,"line_end":273,"column_start":2,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":9542,"byte_end":9550,"line_start":281,"line_end":281,"column_start":5,"column_end":13},"name":"has_keys","qualname":"::SyncCryptoStore::has_keys","value":"pub fn has_keys(&Self, &[(Vec<u8>, KeyTypeId)]) -> bool","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" Checks if the private keys for the given public key and key type combinations exist.","sig":null,"attributes":[{"value":"/ Checks if the private keys for the given public key and key type combinations exist.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":9387,"byte_end":9475,"line_start":278,"line_end":278,"column_start":2,"column_end":90}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":9477,"byte_end":9480,"line_start":279,"line_end":279,"column_start":2,"column_end":5}},{"value":"/ Returns `true` iff all private keys could be found.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":9482,"byte_end":9537,"line_start":280,"line_end":280,"column_start":2,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":9817,"byte_end":9826,"line_start":290,"line_end":290,"column_start":5,"column_end":14},"name":"sign_with","qualname":"::SyncCryptoStore::sign_with","value":"pub fn sign_with(&Self, KeyTypeId, &CryptoTypePublicPair, &[u8])\n-> Result<Vec<u8>, Error>","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" Sign with key","sig":null,"attributes":[{"value":"/ Sign with key","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":9607,"byte_end":9624,"line_start":283,"line_end":283,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":9626,"byte_end":9629,"line_start":284,"line_end":284,"column_start":2,"column_end":5}},{"value":"/ Signs a message with the private key that matches","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":9631,"byte_end":9684,"line_start":285,"line_end":285,"column_start":2,"column_end":55}},{"value":"/ the public key passed.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":9686,"byte_end":9712,"line_start":286,"line_end":286,"column_start":2,"column_end":28}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":9714,"byte_end":9717,"line_start":287,"line_end":287,"column_start":2,"column_end":5}},{"value":"/ Returns the SCALE encoded signature if key is found & supported,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":9719,"byte_end":9787,"line_start":288,"line_end":288,"column_start":2,"column_end":70}},{"value":"/ an error otherwise.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":9789,"byte_end":9812,"line_start":289,"line_end":289,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":10149,"byte_end":10162,"line_start":303,"line_end":303,"column_start":5,"column_end":18},"name":"sign_with_any","qualname":"::SyncCryptoStore::sign_with_any","value":"pub fn sign_with_any(&Self, KeyTypeId, Vec<CryptoTypePublicPair>, &[u8])\n-> Result<(CryptoTypePublicPair, Vec<u8>), Error>","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" Sign with any key","sig":null,"attributes":[{"value":"/ Sign with any key","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":9930,"byte_end":9951,"line_start":297,"line_end":297,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":9953,"byte_end":9956,"line_start":298,"line_end":298,"column_start":2,"column_end":5}},{"value":"/ Given a list of public keys, find the first supported key and","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":9958,"byte_end":10023,"line_start":299,"line_end":299,"column_start":2,"column_end":67}},{"value":"/ sign the provided message with that key.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":10025,"byte_end":10069,"line_start":300,"line_end":300,"column_start":2,"column_end":46}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":10071,"byte_end":10074,"line_start":301,"line_end":301,"column_start":2,"column_end":5}},{"value":"/ Returns a tuple of the used key and the SCALE encoded signature.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":10076,"byte_end":10144,"line_start":302,"line_end":302,"column_start":2,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":10906,"byte_end":10919,"line_start":328,"line_end":328,"column_start":5,"column_end":18},"name":"sign_with_all","qualname":"::SyncCryptoStore::sign_with_all","value":"pub fn sign_with_all(&Self, KeyTypeId, Vec<CryptoTypePublicPair>, &[u8])\n-> Result<Vec<Result<Vec<u8>, Error>>, ()>","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" Sign with all keys","sig":null,"attributes":[{"value":"/ Sign with all keys","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":10634,"byte_end":10656,"line_start":321,"line_end":321,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":10658,"byte_end":10661,"line_start":322,"line_end":322,"column_start":2,"column_end":5}},{"value":"/ Provided a list of public keys, sign a message with","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":10663,"byte_end":10718,"line_start":323,"line_end":323,"column_start":2,"column_end":57}},{"value":"/ each key given that the key is supported.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":10720,"byte_end":10765,"line_start":324,"line_end":324,"column_start":2,"column_end":47}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":10767,"byte_end":10770,"line_start":325,"line_end":325,"column_start":2,"column_end":5}},{"value":"/ Returns a list of `Result`s each representing the SCALE encoded","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":10772,"byte_end":10839,"line_start":326,"line_end":326,"column_start":2,"column_end":69}},{"value":"/ signature of each key or a Error for non-supported keys.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":10841,"byte_end":10901,"line_start":327,"line_end":327,"column_start":2,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":11763,"byte_end":11779,"line_start":351,"line_end":351,"column_start":5,"column_end":21},"name":"sr25519_vrf_sign","qualname":"::SyncCryptoStore::sr25519_vrf_sign","value":"pub fn sr25519_vrf_sign(&Self, KeyTypeId, &sr25519::Public, VRFTranscriptData)\n-> Result<VRFSignature, Error>","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" Generate VRF signature for given transcript data.","sig":null,"attributes":[{"value":"/ Generate VRF signature for given transcript data.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":11130,"byte_end":11183,"line_start":337,"line_end":337,"column_start":2,"column_end":55}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":11185,"byte_end":11188,"line_start":338,"line_end":338,"column_start":2,"column_end":5}},{"value":"/ Receives KeyTypeId and Public key to be able to map","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":11190,"byte_end":11245,"line_start":339,"line_end":339,"column_start":2,"column_end":57}},{"value":"/ them to a private key that exists in the keystore which","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":11247,"byte_end":11306,"line_start":340,"line_end":340,"column_start":2,"column_end":61}},{"value":"/ is, in turn, used for signing the provided transcript.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":11308,"byte_end":11366,"line_start":341,"line_end":341,"column_start":2,"column_end":60}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":11368,"byte_end":11371,"line_start":342,"line_end":342,"column_start":2,"column_end":5}},{"value":"/ Returns a result containing the signature data.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":11373,"byte_end":11424,"line_start":343,"line_end":343,"column_start":2,"column_end":53}},{"value":"/ Namely, VRFOutput and VRFProof which are returned","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":11426,"byte_end":11479,"line_start":344,"line_end":344,"column_start":2,"column_end":55}},{"value":"/ inside the `VRFSignature` container struct.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":11481,"byte_end":11528,"line_start":345,"line_end":345,"column_start":2,"column_end":49}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":11530,"byte_end":11533,"line_start":346,"line_end":346,"column_start":2,"column_end":5}},{"value":"/ This function will return an error in the cases where","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":11535,"byte_end":11592,"line_start":347,"line_end":347,"column_start":2,"column_end":59}},{"value":"/ the public key and key type provided do not match a private","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":11594,"byte_end":11657,"line_start":348,"line_end":348,"column_start":2,"column_end":65}},{"value":"/ key in the keystore. Or, in the context of remote signing","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":11659,"byte_end":11720,"line_start":349,"line_end":349,"column_start":2,"column_end":63}},{"value":"/ an error could be a network one.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":11722,"byte_end":11758,"line_start":350,"line_end":350,"column_start":2,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":119},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":11955,"byte_end":11973,"line_start":360,"line_end":360,"column_start":10,"column_end":28},"name":"SyncCryptoStorePtr","qualname":"::SyncCryptoStorePtr","value":"Arc<SyncCryptoStore>","parent":null,"children":[],"decl_id":null,"docs":" A pointer to a keystore.\n","sig":null,"attributes":[{"value":"/ A pointer to a keystore.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":11917,"byte_end":11945,"line_start":359,"line_end":359,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":412},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":12124,"byte_end":12135,"line_start":364,"line_end":364,"column_start":13,"column_end":24},"name":"KeystoreExt","qualname":"::KeystoreExt","value":"","parent":null,"children":[],"decl_id":null,"docs":" The keystore extension to register/retrieve from the externalities.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","byte_start":13499,"byte_end":13507,"line_start":40,"line_end":40,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","byte_start":14464,"byte_end":14472,"line_start":73,"line_end":73,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":131},{"krate":0,"index":137},{"krate":0,"index":144},{"krate":0,"index":150},{"krate":0,"index":157},{"krate":0,"index":163},{"krate":0,"index":170},{"krate":0,"index":178},{"krate":0,"index":185},{"krate":0,"index":191},{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","byte_start":16443,"byte_end":16451,"line_start":149,"line_end":149,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":42},{"krate":0,"index":46},{"krate":0,"index":50},{"krate":0,"index":52},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","byte_start":21793,"byte_end":21801,"line_start":326,"line_end":326,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","byte_start":21902,"byte_end":21910,"line_start":332,"line_end":332,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":714,"byte_end":721,"line_start":19,"line_end":19,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":731,"byte_end":734,"line_start":20,"line_end":20,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":80}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","byte_start":13499,"byte_end":13507,"line_start":40,"line_end":40,"column_start":6,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","byte_start":14464,"byte_end":14472,"line_start":73,"line_end":73,"column_start":22,"column_end":30},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":120},"to":{"krate":0,"index":348}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","byte_start":16443,"byte_end":16451,"line_start":149,"line_end":149,"column_start":26,"column_end":34},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":120},"to":{"krate":0,"index":102}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","byte_start":21793,"byte_end":21801,"line_start":326,"line_end":326,"column_start":35,"column_end":43},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":120},"to":{"krate":2,"index":1960}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/testing.rs","byte_start":21902,"byte_end":21910,"line_start":332,"line_end":332,"column_start":37,"column_end":45},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":120},"to":{"krate":2,"index":1960}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":1670,"byte_end":1674,"line_start":53,"line_end":53,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":2045},"to":{"krate":0,"index":348}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":1677,"byte_end":1681,"line_start":53,"line_end":53,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2057},"to":{"krate":0,"index":348}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":7045,"byte_end":7056,"line_start":210,"line_end":210,"column_start":28,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":348},"to":{"krate":0,"index":102}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":7059,"byte_end":7063,"line_start":210,"line_end":210,"column_start":42,"column_end":46},"kind":"SuperTrait","from":{"krate":2,"index":2045},"to":{"krate":0,"index":102}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/sp-keystore-0.9.0/src/lib.rs","byte_start":7066,"byte_end":7070,"line_start":210,"line_end":210,"column_start":49,"column_end":53},"kind":"SuperTrait","from":{"krate":2,"index":2057},"to":{"krate":0,"index":102}}]}